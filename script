-- HanimeShowdown by Vinue and MOURN.


-- ORIGINAL SCRIPT IS BOOBWOKEN, MADE BY Ukiyo#5016 CHECK HIS SCRIPTS OUT 


local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
--
local function requireShit(object)
	local object = game:GetObjects(getsynasset(object))[1]
	object=object:Clone()
	local source = object.Source
	local shit = loadstring(source,object.Name)
	local origEnv = getfenv(shit);
	getfenv(shit).script = object;
	getfenv(shit).require=function(what)
		return requireShit(what);
	end
	local dat = {pcall(function()   
		return shit();   
	end)}   
	if(dat[1]==false)then
		warn(dat[2])
		return nil
	else
		table.remove(dat,1)
		return unpack(dat)
	end
end

local SpringClass = nil
local RaceData = nil
local KeyframeService = nil
local DressUp = nil
local GenderCalculator = nil

if not game:GetService("RunService"):IsStudio() then
	SpringClass = requireShit("HanimeShowdown/SpringClass.rbxm")
	RaceData = requireShit("HanimeShowdown/SizePatch.rbxm")
	KeyframeService = requireShit("HanimeShowdown/KeyframeService.rbxm")
	DressUp = requireShit("HanimeShowdown/DressUpCharacter6.rbxm")
	GenderCalculator = requireShit("HanimeShowdown/BouncePatch.rbxm")
else 
	SpringClass = require(script:WaitForChild("SpringClass"))
	RaceData = require(script:WaitForChild("RaceModule"))
	KeyframeService = require(script:WaitForChild("KeyframeService"))
	DressUp = require(script:WaitForChild("DressUpCharacter6"))	
	GenderCalculator = require(script:WaitForChild("CalculateGender"))
end

--

--game:GetService("Workspace").Live[".crocco7648"].CustomRig

function BreastPhysics(Model,HumRoot,Scale)
	spawn(function()
		local P = Model:FindFirstChild("BoobJ",true)
		local A = Model:FindFirstChild("BJ",true)
		local SJ = P
		local OGC0 = P.C0
		local OGC02 = A.C0

		local Torso = SJ.Parent.Parent
		local OGY = Torso.Position.Y

		local BreastSpring = SpringClass.new(0)
		BreastSpring.Target = 5;
		BreastSpring.Velocity = 0;
		BreastSpring.Speed = 10;
		BreastSpring.Damper = .2;

		local AssSpring = SpringClass.new(0)
		AssSpring.Target = 3;
		AssSpring.Velocity = 0;
		AssSpring.Speed = 10;
		AssSpring.Damper = .1;


		local StepConn 

		StepConn = game:GetService("RunService").Stepped:Connect(function(t,d)
			if not HumRoot.Parent or not HumRoot.Parent.Parent then
				warn("dc'd")
				Model:Destroy()
				StepConn:Disconnect()
				AssSpring = nil 
				BreastSpring = nil
				return
			end
			if (HumRoot.Position - workspace.CurrentCamera.CFrame.p).Magnitude < 50 then
				local CURRY = Torso.Position.Y
				BreastSpring:TimeSkip(d)
				BreastSpring:Impulse(OGY - CURRY)
				AssSpring:TimeSkip(d)
				AssSpring:Impulse(OGY - CURRY)
				SJ.C0 = OGC0 * CFrame.new(0,-.02 * (BreastSpring.Velocity/10),0) *  CFrame.Angles(-10 * math.rad(BreastSpring.Velocity),0,0)
				A.C0 = OGC02 * CFrame.new(0,-.05 * (AssSpring.Velocity/10),0) *  CFrame.Angles(2 * math.rad(AssSpring.Velocity),0,0)
				--X.Position = Vector3.new(-275.86, 13.049 + BreastSpring.Velocity, 703.4)
				OGY = CURRY			
			end
		end)
	end)
end



function CheckIfValidRigAndApply(Model,ApplyPhysics,...)
	wait(.03)
	spawn(function()
		-- run asynchronysly.

		local HumanoidRootPart = Model:FindFirstChild("HumanoidRootPart")
		if not HumanoidRootPart then
			HumanoidRootPart = Model:WaitForChild("HumanoidRootPart")
		end

		local Torso = Model:WaitForChild("Torso")		
		local Humanoid = Model:FindFirstChild("Humanoid")
		local x = true


		if Model:FindFirstChild("CustomRig") or (Humanoid and Humanoid.RigType == Enum.HumanoidRigType.R15) then
			return
		end -- we dont need floating tiddies again

		local Player = Players:FindFirstChild(Model.Name)
		local Name = Model.Name
		if string.len(Humanoid.DisplayName) > 1 then
			Name = Humanoid.DisplayName
		end
		--	warn(Name)
		local FirstName = Name 
		if string.find(FirstName," ") then
			FirstName = string.sub(Name,1,string.find(FirstName," ") - 1)
		end
		--	warn(FirstName)

		local Race,Varient = RaceData:GetRaceFromSkinTone(Torso.Color)
		local Scales = RaceData:ScaleViaNameAndRace(Name,Race)
		local Gender = GenderCalculator:DetermineGender(Model,((Player and FirstName) or nil))
		--local Gender = 1

		local NewRig = nil

		--[[
		if Gender == 1 then	
			NewRig = DressUp:ApplyFemBody(RaceData,Model)
		elseif Gender == 0 then
			--NewRig = DressUp:ApplyMaleBody(RaceData,Model)
		elseif Gender == 2 then
			--NewRig = DressUp:ApplyHermBody(RaceData,Model)
		end
		]]

		NewRig = DressUp:ApplyFemBody(RaceData,Model)


		if NewRig then


			if ApplyPhysics then

				BreastPhysics(NewRig,HumanoidRootPart,1)

				--[[
				if Gender == 1 then
					BreastPhysics(NewRig,HumanoidRootPart,1)	
				end
				]]
			end
		else 
			warn("Unsuccessfull, "..tostring(Model))
			return
		end

		return NewRig
	end)
end

-- dw

--if game.CreatorId == 21507162 then
local LiveFolder = workspace:WaitForChild("InGame")

LiveFolder.ChildAdded:Connect(function(m)
	if m:IsA("Model") then
		CheckIfValidRigAndApply(m,true)
	end
end)

for i,m in pairs(LiveFolder:GetChildren()) do
	if m:IsA("Model") then
		CheckIfValidRigAndApply(m,true)
	end
end

NPCFolder.ChildAdded:Connect(function(m)
	if m:IsA("Model") then
		CheckIfValidRigAndApply(m,false)
	end
end)

for i,m in pairs(NPCFolder:GetChildren()) do
	if m:IsA("Model") then
		CheckIfValidRigAndApply(m,false)
	end
end	
--else 
-- print
--end
--
